commit 788b8002c706b534487a6c386bdd764218c81dfa
Author: Codex <codex@openai.com>
Date:   Fri May 30 10:15:52 2025 +0000

    Applying previous commit.

diff --git a/README.md b/README.md
index cd0b2bb..4af65d7 100644
--- a/README.md
+++ b/README.md
@@ -1 +1,13 @@
-# ineedtours-web-01
+# I Need Tours Web Monorepo
+
+Este repositorio contiene el proyecto inicial de la web de I Need Tours.
+
+La carpeta `frontend/` incluye un proyecto en Angular 18 con Tailwind CSS configurado.
+
+Para iniciar el desarrollo:
+
+```bash
+cd frontend
+npm install
+npm start
+```
diff --git a/frontend/README.md b/frontend/README.md
new file mode 100644
index 0000000..fda2dd3
--- /dev/null
+++ b/frontend/README.md
@@ -0,0 +1,10 @@
+# I Need Tours Web
+
+Proyecto inicial en Angular 18 con Tailwind CSS ya configurado. Para iniciar el proyecto, se requiere tener Node.js instalado y ejecutar:
+
+```bash
+npm install
+npm start
+```
+
+Esto levantará el servidor de desarrollo en `http://localhost:4200`
diff --git a/frontend/angular.json b/frontend/angular.json
new file mode 100644
index 0000000..fb027cb
--- /dev/null
+++ b/frontend/angular.json
@@ -0,0 +1,81 @@
+{
+  "$schema": "https://json.schemastore.org/angular.json",
+  "version": 1,
+  "defaultProject": "ineedtours-web",
+  "projects": {
+    "ineedtours-web": {
+      "projectType": "application",
+      "schematics": {},
+      "root": "",
+      "sourceRoot": "src",
+      "prefix": "app",
+      "architect": {
+        "build": {
+          "builder": "@angular-devkit/build-angular:browser",
+          "options": {
+            "outputPath": "dist/ineedtours-web",
+            "index": "src/index.html",
+            "main": "src/main.ts",
+            "polyfills": [],
+            "tsConfig": "tsconfig.app.json",
+            "assets": [
+              "src/favicon.ico",
+              "src/assets"
+            ],
+            "styles": [
+              "src/styles.css"
+            ],
+            "scripts": []
+          },
+          "configurations": {
+            "production": {
+              "optimization": true,
+              "outputHashing": "all",
+              "sourceMap": false,
+              "extractCss": true,
+              "namedChunks": false,
+              "aot": true,
+              "extractLicenses": true,
+              "vendorChunk": false,
+              "buildOptimizer": true,
+              "fileReplacements": [
+                {
+                  "replace": "src/environments/environment.ts",
+                  "with": "src/environments/environment.prod.ts"
+                }
+              ]
+            }
+          }
+        },
+        "serve": {
+          "builder": "@angular-devkit/build-angular:dev-server",
+          "options": {
+            "browserTarget": "ineedtours-web:build"
+          },
+          "configurations": {
+            "production": {
+              "browserTarget": "ineedtours-web:build:production"
+            }
+          }
+        },
+        "test": {
+          "builder": "@angular-devkit/build-angular:karma",
+          "options": {
+            "main": "src/test.ts",
+            "polyfills": [],
+            "tsConfig": "tsconfig.spec.json",
+            "karmaConfig": "karma.conf.js",
+            "assets": [
+              "src/favicon.ico",
+              "src/assets"
+            ],
+            "styles": [
+              "src/styles.css"
+            ],
+            "scripts": []
+          }
+        }
+      }
+    }
+  }
+}
diff --git a/frontend/karma.conf.js b/frontend/karma.conf.js
new file mode 100644
index 0000000..c3c7760
--- /dev/null
+++ b/frontend/karma.conf.js
@@ -0,0 +1,35 @@
+module.exports = function (config) {
+  config.set({
+    basePath: '',
+    frameworks: ['jasmine', '@angular-devkit/build-angular'],
+    plugins: [
+      require('karma-jasmine'),
+      require('karma-chrome-launcher'),
+      require('karma-jasmine-html-reporter'),
+      require('karma-coverage'),
+      require('@angular-devkit/build-angular/plugins/karma')
+    ],
+    client: {
+      jasmine: {
+        timeoutInterval: 10000
+      },
+      clearContext: false
+    },
+    coverageReporter: {
+      dir: require('path').join(__dirname, './coverage/ineedtours-web'),
+      subdir: '.',
+      reporters: [
+        { type: 'html' },
+        { type: 'text-summary' }
+      ]
+    },
+    reporters: ['progress', 'kjhtml'],
+    port: 9876,
+    colors: true,
+    logLevel: config.LOG_INFO,
+    autoWatch: true,
+    browsers: ['ChromeHeadless'],
+    singleRun: false,
+    restartOnFileChange: true
+  });
+};
diff --git a/frontend/package.json b/frontend/package.json
new file mode 100644
index 0000000..33c0392
--- /dev/null
+++ b/frontend/package.json
@@ -0,0 +1,40 @@
+{
+  "name": "ineedtours-web",
+  "version": "0.1.0",
+  "private": true,
+  "scripts": {
+    "start": "ng serve",
+    "build": "ng build",
+    "test": "ng test"
+  },
+  "dependencies": {
+    "@angular/animations": "^18.0.0",
+    "@angular/common": "^18.0.0",
+    "@angular/compiler": "^18.0.0",
+    "@angular/core": "^18.0.0",
+    "@angular/forms": "^18.0.0",
+    "@angular/platform-browser": "^18.0.0",
+    "@angular/platform-browser-dynamic": "^18.0.0",
+    "@angular/router": "^18.0.0",
+    "rxjs": "^7.5.0",
+    "tslib": "^2.3.0",
+    "zone.js": "~0.14.0"
+  },
+  "devDependencies": {
+    "@angular-devkit/build-angular": "^18.0.0",
+    "@angular/cli": "^18.0.0",
+    "@angular/compiler-cli": "^18.0.0",
+    "@types/jasmine": "~4.0.0",
+    "@types/node": "^18.0.0",
+    "jasmine-core": "~4.0.0",
+    "karma": "~6.4.0",
+    "karma-chrome-launcher": "~3.1.0",
+    "karma-coverage": "~2.2.0",
+    "karma-jasmine": "~5.0.0",
+    "karma-jasmine-html-reporter": "^2.0.0",
+    "tailwindcss": "^3.4.0",
+    "postcss": "^8.4.0",
+    "autoprefixer": "^10.4.0",
+    "typescript": "~5.3.0"
+  }
+}
diff --git a/frontend/postcss.config.js b/frontend/postcss.config.js
new file mode 100644
index 0000000..a589075
--- /dev/null
+++ b/frontend/postcss.config.js
@@ -0,0 +1,6 @@
+module.exports = {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  }
+};
diff --git a/frontend/src/app/app.component.css b/frontend/src/app/app.component.css
new file mode 100644
index 0000000..0ed8f1d
--- /dev/null
+++ b/frontend/src/app/app.component.css
@@ -0,0 +1 @@
+/* Estilos base para la aplicación */
diff --git a/frontend/src/app/app.component.html b/frontend/src/app/app.component.html
new file mode 100644
index 0000000..0d61cef
--- /dev/null
+++ b/frontend/src/app/app.component.html
@@ -0,0 +1,2 @@
+<h1 class="text-2xl font-bold text-center m-4">Bienvenido a I Need Tours</h1>
+<p class="text-center">Aplicación inicial en Angular 18 con Tailwind CSS.</p>
diff --git a/frontend/src/app/app.component.ts b/frontend/src/app/app.component.ts
new file mode 100644
index 0000000..f04c8c9
--- /dev/null
+++ b/frontend/src/app/app.component.ts
@@ -0,0 +1,10 @@
+import { Component } from '@angular/core';
+
+@Component({
+  selector: 'app-root',
+  templateUrl: './app.component.html',
+  styleUrls: ['./app.component.css']
+})
+export class AppComponent {
+  title = 'ineedtours-web';
+}
diff --git a/frontend/src/app/app.module.ts b/frontend/src/app/app.module.ts
new file mode 100644
index 0000000..1b53f39
--- /dev/null
+++ b/frontend/src/app/app.module.ts
@@ -0,0 +1,11 @@
+import { NgModule } from '@angular/core';
+import { BrowserModule } from '@angular/platform-browser';
+import { AppComponent } from './app.component';
+
+@NgModule({
+  declarations: [AppComponent],
+  imports: [BrowserModule],
+  providers: [],
+  bootstrap: [AppComponent]
+})
+export class AppModule {}
diff --git a/frontend/src/environments/environment.prod.ts b/frontend/src/environments/environment.prod.ts
new file mode 100644
index 0000000..3612073
--- /dev/null
+++ b/frontend/src/environments/environment.prod.ts
@@ -0,0 +1,3 @@
+export const environment = {
+  production: true
+};
diff --git a/frontend/src/environments/environment.ts b/frontend/src/environments/environment.ts
new file mode 100644
index 0000000..ffe8aed
--- /dev/null
+++ b/frontend/src/environments/environment.ts
@@ -0,0 +1,3 @@
+export const environment = {
+  production: false
+};
diff --git a/frontend/src/favicon.ico b/frontend/src/favicon.ico
new file mode 100644
index 0000000..e69de29
diff --git a/frontend/src/index.html b/frontend/src/index.html
new file mode 100644
index 0000000..6c93cf1
--- /dev/null
+++ b/frontend/src/index.html
@@ -0,0 +1,12 @@
+<!DOCTYPE html>
+<html lang="es">
+<head>
+  <meta charset="utf-8">
+  <title>I Need Tours</title>
+  <base href="/">
+  <meta name="viewport" content="width=device-width, initial-scale=1">
+</head>
+<body>
+  <app-root></app-root>
+</body>
+</html>
diff --git a/frontend/src/main.ts b/frontend/src/main.ts
new file mode 100644
index 0000000..fbf76ea
--- /dev/null
+++ b/frontend/src/main.ts
@@ -0,0 +1,5 @@
+import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
+import { AppModule } from './app/app.module';
+
+platformBrowserDynamic().bootstrapModule(AppModule)
+  .catch(err => console.error(err));
diff --git a/frontend/src/polyfills.ts b/frontend/src/polyfills.ts
new file mode 100644
index 0000000..aa09a9f
--- /dev/null
+++ b/frontend/src/polyfills.ts
@@ -0,0 +1 @@
+import 'zone.js';
diff --git a/frontend/src/styles.css b/frontend/src/styles.css
new file mode 100644
index 0000000..b5c61c9
--- /dev/null
+++ b/frontend/src/styles.css
@@ -0,0 +1,3 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
diff --git a/frontend/src/test.ts b/frontend/src/test.ts
new file mode 100644
index 0000000..c28ea9d
--- /dev/null
+++ b/frontend/src/test.ts
@@ -0,0 +1,7 @@
+import { getTestBed } from '@angular/core/testing';
+import { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';
+
+getTestBed().initTestEnvironment(
+  BrowserDynamicTestingModule,
+  platformBrowserDynamicTesting(),
+);
diff --git a/frontend/tailwind.config.js b/frontend/tailwind.config.js
new file mode 100644
index 0000000..00498bb
--- /dev/null
+++ b/frontend/tailwind.config.js
@@ -0,0 +1,9 @@
+module.exports = {
+  content: [
+    "./src/**/*.{html,ts}"
+  ],
+  theme: {
+    extend: {},
+  },
+  plugins: [],
+};
diff --git a/frontend/tsconfig.app.json b/frontend/tsconfig.app.json
new file mode 100644
index 0000000..f758d98
--- /dev/null
+++ b/frontend/tsconfig.app.json
@@ -0,0 +1,14 @@
+{
+  "extends": "./tsconfig.json",
+  "compilerOptions": {
+    "outDir": "./out-tsc/app",
+    "types": []
+  },
+  "files": [
+    "src/main.ts",
+    "src/polyfills.ts"
+  ],
+  "include": [
+    "src/**/*.d.ts"
+  ]
+}
diff --git a/frontend/tsconfig.json b/frontend/tsconfig.json
new file mode 100644
index 0000000..c5103f8
--- /dev/null
+++ b/frontend/tsconfig.json
@@ -0,0 +1,17 @@
+{
+  "compileOnSave": false,
+  "compilerOptions": {
+    "baseUrl": "./",
+    "outDir": "./dist/out-tsc",
+    "sourceMap": true,
+    "declaration": false,
+    "downlevelIteration": true,
+    "experimentalDecorators": true,
+    "moduleResolution": "node",
+    "importHelpers": true,
+    "target": "es2022",
+    "module": "esnext",
+    "typeRoots": ["node_modules/@types"],
+    "lib": ["es2022", "dom"]
+  }
+}
diff --git a/frontend/tsconfig.spec.json b/frontend/tsconfig.spec.json
new file mode 100644
index 0000000..17c63b6
--- /dev/null
+++ b/frontend/tsconfig.spec.json
@@ -0,0 +1,15 @@
+{
+  "extends": "./tsconfig.json",
+  "compilerOptions": {
+    "outDir": "./out-tsc/spec",
+    "types": ["jasmine", "node"]
+  },
+  "files": [
+    "src/test.ts",
+    "src/polyfills.ts"
+  ],
+  "include": [
+    "src/**/*.spec.ts",
+    "src/**/*.d.ts"
+  ]
+}
